<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ch.sofa</groupId>
		<artifactId>lodo-backend</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>portal</artifactId>
	<packaging>war</packaging>

	<properties>
		<war-name>lodo-webapp</war-name>
		<spring.vaadin.addons.version>2.0.0.RELEASE</spring.vaadin.addons.version>
		<vaadin.version>14.0.11</vaadin.version>
		<start-class>ch.sofa.lodo.admin.Application</start-class>
	</properties>


	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<!-- Replace artifactId with vaadin-core to use only free components -->
			<artifactId>vaadin-core</artifactId>
			<exclusions>
				<!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
				<exclusion>
					<groupId>com.vaadin.webjar</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.insites</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymer</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymerelements</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.vaadin</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.0</version>
		</dependency>

		<dependency>
			<groupId>ch.sofa</groupId>
			<artifactId>jpa-backend</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.vaadin.spring.addons/vaadin-spring-addon-eventbus -->
		<dependency>
			<groupId>org.vaadin.spring.addons</groupId>
			<artifactId>vaadin-spring-addon-eventbus</artifactId>
			<version>14.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.flowingcode.addons/font-awesome-iron-iconset -->
		<!-- http://vaadin.com/nexus/content/repositories/vaadin-addons -->
		<dependency>
			<groupId>com.flowingcode.addons</groupId>
			<artifactId>font-awesome-iron-iconset</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- <dependency>
			<groupId>ch.sofa</groupId>
			<artifactId>sofa-xml</artifactId>
			<version>1.7.0</version>
		</dependency> -->

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<finalName>${war-name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources/</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<!-- <execution> -->
					<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
					<!-- <id>install node and npm</id> -->
					<!-- <goals> -->
					<!-- <goal>install-node-and-npm</goal> -->
					<!-- </goals> -->
					<!-- optional: default phase is "generate-resources" -->
					<!-- <phase>generate-resources</phase> -->
					<!-- </execution> -->
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
				<!-- <configuration> -->
				<!-- <nodeVersion>v10.16.2</nodeVersion> -->

				<!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
				<!-- <npmVersion>2.15.9</npmVersion> -->

				<!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
				<!-- <downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot> -->
				<!-- </configuration> -->
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- Use the latest released version: https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
				<version>1.8.0</version>

				<executions>
					<execution>
						<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
					</execution>
				</executions>
				<configuration>
					<nodeVersion>v10.16.3</nodeVersion>

					<!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
					<!-- <npmVersion>2.15.9</npmVersion> -->

					<!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
					<!-- <downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>operators</id>
						<goals>
							<goal>xjc</goal>
						</goals>
						<configuration>
							<packageName>ch.sofa.lodo.admin.settings.xml.jaxb</packageName>
							<sources>
								<source>src/main/resources/settings.xsd</source>
							</sources>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<noGeneratedHeaderComments>true</noGeneratedHeaderComments>
					<outputDirectory>src/main/java/</outputDirectory>
					<generateEpisode>false</generateEpisode>
					<clearOutputDir>false</clearOutputDir>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Production mode is activated using -Pproduction -->
			<id>production</id>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-server-production-mode</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>prepare-frontend</goal>
									<goal>build-frontend</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>